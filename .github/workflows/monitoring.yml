name: Deploy to ECR

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: monitoring-ecr
  IMAGE_TAG: 1.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Compose for Prometheus
        run: |
          cd prometheus-grafana/prometheus
          docker-compose build
          docker tag <your_image_name> ${{ env.ECR_REPOSITORY }}:<your_image_name>:${{ env.IMAGE_TAG }}
          docker push ${{ env.ECR_REPOSITORY }}:prometheus:${{ env.IMAGE_TAG }}

      - name: Set up Docker Compose for Grafana
        run: |
          cd prometheus-grafana/grafana
          docker-compose build
          docker tag <your_image_name> ${{ env.ECR_REPOSITORY }}:<your_image_name>:${{ env.IMAGE_TAG }}
          docker push ${{ env.ECR_REPOSITORY }}:grafana:${{ env.IMAGE_TAG }}

      - name: Set up Docker Compose for Alertmanager
        run: |
          cd prometheus-grafana
          docker-compose build
          docker tag <your_image_name> ${{ env.ECR_REPOSITORY }}:Alertmanager:${{ env.IMAGE_TAG }}
          docker push ${{ env.ECR_REPOSITORY }}:<your_image_name>:${{ env.IMAGE_TAG }}
